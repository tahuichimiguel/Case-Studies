Sys.getlocale('LC_TIME')
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
year(this_day
)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
second(this_moment)
my_date<-ymd('1989-05-17')
my_date
class(my_date)
ymd('1989 May 17')
mdy('1989 May 17')
mdy('March 12, 1975')
mdy('25081958')
mdy(25081958)
dmy(25081958)
dmy(25081985)
ymd('192012')
ymd('1-9-2012')
ymd('1-2-1920')
mdy('1-2-1920')
ymd('1920/1/2')
dt1
ymd_hms(dt1)
hms('03:22:14')
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
?update
this_moment<-update(this_moment,hours=hour(now()),minutes=minute(now()),seconds=second(now()))
this_moment
nyc<-now(tzone='America/New_York')
nyv
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes = 34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone='Asia/Hong_Kong')
arrive
last_time<-mdy('June 17, 2008',tz = 'Singapore')
last_time
?interval
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
install.packages('shiny')
?gsub
?sapply
?unique
library(data.table)
data("iris")
iris<-data.table(iris)
iris$Sepal.Length
?geom_point
library(ggplot2)
?geom_point
?lubridate
library(lubridate)
year('2001-1-12')
version
version
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot2")
install.packages(lubridate)
install.packages('lubridate')
install.packages('plotly')
install.packages('leaflet')
install.packages('knitr')
install.packages('caret')
install.packages('data.table')
install.packages('gridExtra')
?addCircels
?addCircles
library(leaflet)
?addCircles
install.packages('pacman')
library(pacman)
if (!require("pacman")) install.packages("pacman")
pacman::p_exists(R)
if (!require("pacman")) install.packages("pacman")
pacman::p_exists(R)
pacman::p_load(animation, rgdal, PBSmodelling, onion, mapview)
?rgdal::project
?getS3method
?getMethod
?getS3method
?show<ethods
?showMethods
?getMethod
library(iris)
data("iris")
library(ggplot2)
library(plotly)
g <- ggplot(data= iris,aes(x=Sepal.Width,y=Sepal.Length,colour=as.factor(Species)))+
geom_point()
ggplotly(g)
g <- ggplot(data= iris,aes(x=Sepal.Width,y=Petal.Width,colour=as.factor(Species)))+
geom_point()+ggtitle('Iris Disparity Based on Sepal Characteristics')
ggplotly(g)
g <- ggplot(data= iris,aes(x=Sepal.Width,y=Petal.Width,colour=as.factor(Species)))+
geom_point()+ggtitle('Iris Disparity Based on Sepal Characteristics')+
theme(legend.title = 'Iris Class')
ggplotly(g)
?labs
g1 <- ggplot(data= iris,aes(x=Sepal.Width,y=Sepal.Length,colour=as.factor(Species)))+
geom_point()+ggtitle('Iris Disparity Based on Sepal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g1)
g2 <- ggplot(data= iris,aes(x=Petal.Width,y=Petal.Length,colour=as.factor(Species)))+
geom_point()+ggtitle('Iris Disparity Based on Petal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g2)
g1 <- ggplot(data= iris,aes(x=Sepal.Width,y=Sepal.Length,colour=Species))+
geom_point()+ggtitle('Iris Disparity Based on Sepal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g1)
g2 <- ggplot(data= iris,aes(x=Petal.Width,y=Petal.Length,colour=Species))+
geom_point()+ggtitle('Iris Disparity Based on Petal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g2)
g1 <- ggplot(data= iris,aes(x=Sepal.Width,y=Sepal.Length,colour=Species))+
geom_point()+ggtitle('Iris Disparity Based on Sepal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g1)
g2 <- ggplot(data= iris,aes(x=Petal.Width,y=Petal.Length,colour=Species))+
geom_point()+ggtitle('Iris Disparity Based on Petal Characteristics')+
guides(fill=guide_legend(title=NULL))
ggplotly(g2)
install.packages("MultinomialCI")
library(parallel)
?`parallel-package`
detectCores()
?varImp
library(caret)
?varImp
library(randomForest)
?varImp
?randomForest::varImp
getAnywhere(importance)
getAnywhere(importance)
importance
getAnywhere(importance)
getAnywhere(importance)
randomForest:::importance()
randomForest:::importance
randomForest:::.importance
getMethod(importance)
method(importance)
getmethod(importance)
getMethod(importance)
getAnywhere(importance)
getAnywhere(importance.default)
methods(randomForest())
methods(randomForest
)
getAnywhere(randomForest)
getAnywhere(hist())
getAnywhere(hist
)
getAnywhere(importance)
?getAnywhere
help importance
getAnywhere('simpleLoess')
getAnywhere('importance')
getFromNamespace(importance)
getFromNamespace('importance','randomForest')
?nb
library(e1071)
?varImp
?chisq.test
version()
version
install.packages("lubridate")
library(checkpoint)
checkpointArchives()
install.packages('ggplot2')
install.packages("lubridate")
install.packages("lubridate")
install.packages('stringi')
library(ggplot2)
library(gridExtra)
library(maps)
library(data.table)
library(lubridate)
library(RColorBrewer)
library(corrplot)
path='/Users/Mikey/Documents/ML-Case-Studies/US Police Shooting Fatalities'
setwd(path)
filenames<-c('Guardian_2015.csv','Guardian_2016.csv','WP_database.csv')
guard2015.dt<-fread(filenames[1],sep=',')
guard2016.dt<-fread(filenames[2],sep=',')
wp.dt<-fread(filenames[3],sep=',')
clean.Guard2015 <-function(datafile){
datafile[,age:=ifelse(age=='Unknown',-1,age)] #-1: Unknown
datafile[,uid:=as.numeric(uid)]
datafile[,age:=as.numeric(age)]
datafile[,gender:=as.factor(gender)]
datafile[,race:=as.factor(raceethnicity)]
datafile[,raceethnicity:=NULL]
datafile[,armed:=as.factor(armed)]
datafile[,day:=as.factor(day)]
datafile[,state:=as.factor(state)]
datafile[,classification:=as.factor(classification)]
datafile
}
clean.Guard2016<-function(datafile){
datafile[,age:=ifelse(age=='Unknown',-1,age)] #-1: Unknown
datafile[,age:=ifelse(age=='40s',-2,age)] #-1: 'Unknown'40s'
datafile[,uid:=as.numeric(uid)]
datafile[,age:=as.numeric(age)]
datafile[,gender:=as.factor(gender)]
datafile[,race:=as.factor(raceethnicity)]
datafile[,raceethnicity:=NULL]
datafile[,armed:=as.factor(armed)]
datafile[,day:=as.factor(day)]
datafile[,state:=as.factor(state)]
datafile[,classification:=as.factor(classification)]
datafile
}
clean.wp<-function(datafile){
datafile[,date:=ymd(date)]
datafile[,manner_of_death:=as.factor(manner_of_death)]
datafile[,armed:=as.factor(armed)]
datafile[,gender:=as.factor(gender)]
datafile[,race:=as.factor(race)]
datafile[,signs_of_mental_illness:=as.factor(signs_of_mental_illness)]
datafile[,threat_level:=as.factor(threat_level)]
datafile[,flee:=as.factor(flee)]
datafile[,body_camera:=as.factor(body_camera)]
datafile[,state:=as.factor(state)]
datafile[,age:=ifelse(is.na(age),-3,age)]
datafile[,year:=day(date)]
datafile[,month:=month(date,label=TRUE,abbr=FALSE)]
datafile[,year:=year(date)]
datafile
}
tbl.ECDF<-function(datatable){
ECDF<-vector(mode='numeric',length = length(datatable))
for (i in 1:nrow(datatable)) {
ECDF[i]<-sum(datatable[nrow(wp.tbl_armed):(nrow(wp.tbl_armed)-(i-1))])
}
ECDF<-ECDF/sum(datatable)
}
clean.guard.dt<-rbindlist(
list(
clean.Guard2015(guard2015.dt),
clean.Guard2016(guard2016.dt)
),
use.names=TRUE
)
clean.guard.dt[,year:=as.factor(year)]
clean.wp.dt<-clean.wp(wp.dt)
clean.wp.dt[,year:=as.factor(year)]
names(clean.guard.dt)
levels(clean.guard.dt$classification)
levels(clean.guard.dt$gender)
ggplot(data = clean.guard.dt, aes(x=gender))+geom_boxplot()
ggplot(data = clean.guard.dt, aes(y=gender))+geom_boxplot()
ggplot(data = clean.guard.dt, aes(y=gender))+geom_bar()
ggplot(data = clean.guard.dt, aes(x=gender))+geom_bar()
cond.target<-function(field, target){
#(target-target%%5)/5 + 1
age.levels <- as.character(c(1:17))
month.levels <- c(" 'January' " ," 'February' ", " 'March' "," 'April' "," 'May' ", " 'June' ", " 'July' ",
" 'August' "," 'September' ", " 'October' ", " 'November' ", "'December' ")
armed.levels<-c( " 'Disputed' " ," 'Firearm' "," 'Knife' "," 'No' ",
" 'Non-lethal firearm' "," 'Other' "," 'Unknown' "," 'Vehicle' ")
race.levels<-c(" 'Arab-American' "," 'Asian/Pacific Islander' ", " 'Black' "," 'Hispanic/Latino' ",
" 'Native American' "," 'Other' "," 'Unknown' "," 'White' " )
v.str <- ifelse(field==1,'((age - age%%5)/5)',
ifelse(field==2,'month',
ifelse(field==3,'armed','race')))
trgt.str<-ifelse(field==1,age.levels[target],
ifelse(field==2,month.levels[target],
ifelse(field==3,armed.levels[target],race.levels[target])))
paste0(v.str,'==',trgt.str)
} #Creates Conditional Indexing String
#v('gunshot' & 'male') = [ [age], [month] ,[armed], [race] ]
age.levels <- as.character(c(1:17))
month.levels <- c(" 'January' " ," 'February' ", " 'March' "," 'April' "," 'May' ", " 'June' ", " 'July' ",
" 'August' "," 'September' ", " 'October' ", " 'November' ", "'December' ")
armed.levels<-c( " 'Disputed' " ," 'Firearm' "," 'Knife' "," 'No' ",
" 'Non-lethal firearm' "," 'Other' "," 'Unknown' "," 'Vehicle' ")
race.levels<-c(" 'Arab-American' "," 'Asian/Pacific Islander' ", " 'Black' "," 'Hispanic/Latino' ",
" 'Native American' "," 'Other' "," 'Unknown' "," 'White' " )
pred.names<-c(age.levels,month.levels,armed.levels,race.levels)
age.bins.N <-length(unique(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male'),.(age=(age-age%%5)),]$age))
month.N <- length(levels(as.factor(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$month)))
armed.N <- length(levels(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$armed))
race.N<-length(levels(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$race))
total.levels<-age.bins.N+month.N+armed.N+race.N
mat.heat<-matrix(nrow=total.levels,ncol=total.levels)
for (i in 1:total.levels) {
cond1.field<-ifelse(i<age.bins.N,1,
ifelse(i<age.bins.N+month.N,2,
ifelse(i<age.bins.N+month.N+armed.N,3,4)))
cond1.target<-ifelse(i<age.bins.N,i,
ifelse(i<age.bins.N+month.N,i-age.bins.N,
ifelse(i<age.bins.N+month.N+armed.N,i-age.bins.N-month.N,
i-age.bins.N-month.N-armed.N)))
for (j in 1:total.levels) {
cond2.field<-ifelse(j<age.bins.N,1,
ifelse(j<age.bins.N+month.N,2,
ifelse(j<age.bins.N+month.N+armed.N,3,4)))
cond2.target<-ifelse(j<age.bins.N,j,
ifelse(j<age.bins.N+month.N,j-age.bins.N,
ifelse(j<age.bins.N+month.N+armed.N,j-age.bins.N-month.N,
j-age.bins.N-month.N-armed.N)))
cond1 <- parse(text=cond.target(cond1.field,cond1.target))
cond2 <- parse(text=cond.target(cond2.field,cond2.target))
print('')
print(i)
print(j)
mat.heat[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])
}
}
heatmap(mat.heat)
pred.names
age.levels <- as.character(c(1:17))
month.levels <- c(" 'Month:January' " ," 'Month:February' ", " 'Month:March' "," 'Month:April' "," 'Month:May' ",
" 'Month:June' ", " 'Month:July' ", " 'Month:August' "," 'Month:September' ",
" 'Month:October' ", " 'Month:November' ", "'Month:December' ")
armed.levels<-c( " 'Armed:Disputed' " ," 'Armed:Firearm' "," 'Armed:Knife' "," 'Armed:No' ",
" 'Armed:Non-lethal firearm' "," 'Armed:Other' "," 'Armed:Unknown' "," 'Armed:Vehicle' ")
race.levels<-c(" 'Arab-American' "," 'Asian/Pacific Islander' ", " 'Black' "," 'Hispanic/Latino' ",
" 'Native American' "," 'Other' "," 'Unknown' "," 'White' " )
pred.names<-c(age.levels,month.levels,armed.levels,race.levels)
?heatmap
?data.frame
df.heatmap<-data.frame(mat.heat,row.names=pred.names)
names(df.heatmap)<-pred.names
heatmap(mat.heat,Rowv = NA,xlab=pred.names,ylab = pred.names)
heatmap(mat.heat,Rowv = NA,labCol=pred.names,labRow = pred.names)
age.levels
length(age.levels)
age.levels <- c('Age: <5', '5-10','11-15','16-20','21-25','26-30','31-35','36-40','41-45','46-50','51-55','56-60',
'61-65','66-70','71-75','76-80','81-85')
length(age.levels)
cond.target<-function(field, target){
#(target-target%%5)/5 + 1
age.levels <- as.character(c(1:17))
month.levels <- c(" 'January' " ," 'February' ", " 'March' "," 'April' "," 'May' ", " 'June' ", " 'July' ",
" 'August' "," 'September' ", " 'October' ", " 'November' ", "'December' ")
armed.levels<-c( " 'Disputed' " ," 'Firearm' "," 'Knife' "," 'No' ",
" 'Non-lethal firearm' "," 'Other' "," 'Unknown' "," 'Vehicle' ")
race.levels<-c(" 'Arab-American' "," 'Asian/Pacific Islander' ", " 'Black' "," 'Hispanic/Latino' ",
" 'Native American' "," 'Other' "," 'Unknown' "," 'White' " )
v.str <- ifelse(field==1,'((age - age%%5)/5)',
ifelse(field==2,'month',
ifelse(field==3,'armed','race')))
trgt.str<-ifelse(field==1,age.levels[target],
ifelse(field==2,month.levels[target],
ifelse(field==3,armed.levels[target],race.levels[target])))
paste0(v.str,'==',trgt.str)
} #Creates Conditional Indexing String
#v('gunshot' & 'male') = [ [age], [month] ,[armed], [race] ]
#age.levels <- as.character(c(1:17))
age.levels <- c('Age:<5', 'Age:5-10','Age:11-15','Age:16-20','Age:21-25','Age:26-30','Age:31-35',
'Age:36-40','Age:41-45','Age:46-50','Age:51-55','Age:56-60',
'Age:61-65','Age:66-70','Age:71-75','Age:76-80','Age:81-85')
month.levels <- c(" 'Month:January' " ," 'Month:February' ", " 'Month:March' "," 'Month:April' "," 'Month:May' ",
" 'Month:June' ", " 'Month:July' ", " 'Month:August' "," 'Month:September' ",
" 'Month:October' ", " 'Month:November' ", "'Month:December' ")
armed.levels<-c( " 'Armed:Disputed' " ," 'Armed:Firearm' "," 'Armed:Knife' "," 'Armed:No' ",
" 'Armed:Non-lethal firearm' "," 'Armed:Other' "," 'Armed:Unknown' "," 'Armed:Vehicle' ")
race.levels<-c(" 'Arab-American' "," 'Asian/Pacific Islander' ", " 'Black' "," 'Hispanic/Latino' ",
" 'Native American' "," 'Other' "," 'Unknown' "," 'White' " )
pred.names<-c(age.levels,month.levels,armed.levels,race.levels)
age.bins.N <-length(unique(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male'),.(age=(age-age%%5)),]$age))
month.N <- length(levels(as.factor(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$month)))
armed.N <- length(levels(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$armed))
race.N<-length(levels(clean.guard.dt[(age>=0 & classification=='Gunshot' & gender =='Male')]$race))
total.levels<-age.bins.N+month.N+armed.N+race.N
mat.heat<-matrix(nrow=total.levels,ncol=total.levels)
for (i in 1:total.levels) {
cond1.field<-ifelse(i<age.bins.N,1,
ifelse(i<age.bins.N+month.N,2,
ifelse(i<age.bins.N+month.N+armed.N,3,4)))
cond1.target<-ifelse(i<age.bins.N,i,
ifelse(i<age.bins.N+month.N,i-age.bins.N,
ifelse(i<age.bins.N+month.N+armed.N,i-age.bins.N-month.N,
i-age.bins.N-month.N-armed.N)))
for (j in 1:total.levels) {
cond2.field<-ifelse(j<age.bins.N,1,
ifelse(j<age.bins.N+month.N,2,
ifelse(j<age.bins.N+month.N+armed.N,3,4)))
cond2.target<-ifelse(j<age.bins.N,j,
ifelse(j<age.bins.N+month.N,j-age.bins.N,
ifelse(j<age.bins.N+month.N+armed.N,j-age.bins.N-month.N,
j-age.bins.N-month.N-armed.N)))
cond1 <- parse(text=cond.target(cond1.field,cond1.target))
cond2 <- parse(text=cond.target(cond2.field,cond2.target))
print('')
print(i)
print(j)
mat.heat[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])
}
}
# df.heatmap<-data.frame(mat.heat,row.names=pred.names)
# names(df.heatmap)<-pred.names
heatmap(mat.heat,Rowv = NA,labCol=pred.names,labRow = pred.names)
heatmap(mat.heat,labCol=pred.names,labRow = pred.names)
par(mar=c(6,4.1,4.1,6))
heatmap(mat.heat,labCol=pred.names,labRow = pred.names)
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,par(mar=c(6,4.1,4.1,6)))
heatmap(mat.heat,labCol=pred.names,labRow = pred.names)
par(mar=c(6,2,2,6))
heatmap(mat.heat,labCol=pred.names,labRow = pred.names)
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,symm=TRUE)
heatmap(mat.heat,labCol=pred.names,labRow = pred.names)
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,main='Male Gun Fatalities: Factor Interactions')
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,main='Male Gunshot Fatalities: Factor Interactions')
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions',legend())
mat.heat<-mat.heat/total.levels
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions')
?heatmap.2
?heatmap2
example(heatmap)
?heatmap
help(geom_bin2d)
d <- ggplot(diamonds, aes(x, y)) + xlim(4, 10) + ylim(4, 10)
d + geom_bin2d()
df.heatmap<-data.frame(mat.heat,row.names=pred.names)
names(df.heatmap)<-pred.names
ggplot(df.heatmap,aes(x,y))+geom_bin2d()
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions')
mat.heat<-matrix(nrow=total.levels,ncol=total.levels)
mat.heat.norm<-matrix(nrow=total.levels,ncol=total.levels)
for (i in 1:total.levels) {
cond1.field<-ifelse(i<age.bins.N,1,
ifelse(i<age.bins.N+month.N,2,
ifelse(i<age.bins.N+month.N+armed.N,3,4)))
cond1.target<-ifelse(i<age.bins.N,i,
ifelse(i<age.bins.N+month.N,i-age.bins.N,
ifelse(i<age.bins.N+month.N+armed.N,i-age.bins.N-month.N,
i-age.bins.N-month.N-armed.N)))
for (j in 1:total.levels) {
cond2.field<-ifelse(j<age.bins.N,1,
ifelse(j<age.bins.N+month.N,2,
ifelse(j<age.bins.N+month.N+armed.N,3,4)))
cond2.target<-ifelse(j<age.bins.N,j,
ifelse(j<age.bins.N+month.N,j-age.bins.N,
ifelse(j<age.bins.N+month.N+armed.N,j-age.bins.N-month.N,
j-age.bins.N-month.N-armed.N)))
cond1 <- parse(text=cond.target(cond1.field,cond1.target))
cond2 <- parse(text=cond.target(cond2.field,cond2.target))
print('')
print(i)
print(j)
mat.heat[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])
mat.heat.norm[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])/nrow(clean.guard.dt[
((age>=0) & eval(cond1))])
}
}
heatmap(mat.heat.norm,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Normalized Factor Interactions')
View(mat.heat.norm)
mat.heat<-matrix(nrow=total.levels,ncol=total.levels)
mat.heat.norm<-matrix(nrow=total.levels,ncol=total.levels)
for (i in 1:total.levels) {
cond1.field<-ifelse(i<age.bins.N,1,
ifelse(i<age.bins.N+month.N,2,
ifelse(i<age.bins.N+month.N+armed.N,3,4)))
cond1.target<-ifelse(i<age.bins.N,i,
ifelse(i<age.bins.N+month.N,i-age.bins.N,
ifelse(i<age.bins.N+month.N+armed.N,i-age.bins.N-month.N,
i-age.bins.N-month.N-armed.N)))
for (j in 1:total.levels) {
cond2.field<-ifelse(j<age.bins.N,1,
ifelse(j<age.bins.N+month.N,2,
ifelse(j<age.bins.N+month.N+armed.N,3,4)))
cond2.target<-ifelse(j<age.bins.N,j,
ifelse(j<age.bins.N+month.N,j-age.bins.N,
ifelse(j<age.bins.N+month.N+armed.N,j-age.bins.N-month.N,
j-age.bins.N-month.N-armed.N)))
cond1 <- parse(text=cond.target(cond1.field,cond1.target))
cond2 <- parse(text=cond.target(cond2.field,cond2.target))
print('')
print(i)
print(j)
mat.heat[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])
mat.heat.norm[j,i]<- nrow(clean.guard.dt[((age>=0) & eval(cond1) & eval(cond2))])/(nrow(clean.guard.dt[
((age>=0) & eval(cond1))])+1)
}
}
heatmap(mat.heat.norm,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Normalized Factor Interactions')
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions')
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions')
?heatmap
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions',margins=c(8,8))
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions',margins=c(10,10))
heatmap(mat.heat,labCol=pred.names,labRow = pred.names,
main='Male Gunshot Fatalities: Factor Interactions',margins=c(9,9))
